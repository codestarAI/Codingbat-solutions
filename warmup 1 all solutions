Warmup-1 monkeyTrouble 
ans:
public boolean monkeyTrouble(boolean aSmile, boolean bSmile) {
  return ((aSmile && bSmile) || (!aSmile && !bSmile)) ? true : false;
}

Warmup-1 sumDouble 
ans:
public int sumDouble(int a, int b) {
 return (a == b) ? 2*(a+b) : a+b;
}

Warmup-1 diff21
ans:
public int diff21(int n) {
  return (n > 21) ? (Math.abs(n-21)*2) : (Math.abs(n-21));
}

Warmup-1 parrotTrouble
ans:
public boolean parrotTrouble(boolean talking, int hour) {
  return (talking && (hour < 7 || hour > 20)) ? true : false;
}

Warmup-1 makes10
ans:
public boolean makes10(int a, int b) {
  return (a == 10 || b == 10 || a+b == 10) ? true : false;
}

Warmup-1 nearHundred
ans:
public boolean nearHundred(int n) {
  return ((Math.abs(200-n) <= 10 && Math.abs(200-n) >= 0) || 
  (Math.abs(100-n) <= 10 && Math.abs(100-n) >= 0)) ? true : false;
}

Warmup-1 posNeg
ans:
public boolean posNeg(int a, int b, boolean negative) {
  if(negative) {
    return (a < 0 && b < 0) ? true : false;
  }
  return ((a < 0 && b > 0) || (b < 0 && a > 0)) ? true : false;
}


Warmup-1 notString
ans:
public String notString(String str) {
  if(str.length() >= 3 && str.substring(0,3).equals("not")) return str;
  return "not " + str;
}


Warmup-1 missingChar
ans:
public String missingChar(String str, int n) {
  if(n != 0 || n != str.length()-1) return str.substring(0, n) + str.substring(n+1, str.length());
  else if(n == 0) return str.substring(1, str.length()-1);
  else return str.substring(str.length()-2); 
}


Warmup-1 frontBack
ans:
public String frontBack(String str) {
  if(str.length() < 2) return str;
  return str.charAt(str.length()-1) + str.substring(1, str.length()-1) + str.charAt(0);
}


Warmup-1 front3
ans:
public String front3(String str) {
  if(str.length() < 3) return str+str+str;
  return str.substring(0,3) + str.substring(0,3) + str.substring(0,3);
}


Warmup-1 backAround 
ans:
public String backAround(String str) {
  if(str.length() == 1) return str + str + str;
  return str.charAt(str.length()-1) + str + str.charAt(str.length()-1);
}



Warmup-1 or35
ans:
public boolean or35(int n) {
  return ((n % 3 == 0) || (n % 5 == 0)) ? true : false;
}


Warmup-1 front22
ans:
public String front22(String str) {
  if(str.length() < 2) return str + str + str;
  return str.substring(0,2) + str + str.substring(0,2);
}


Warmup-1 startHi
ans:
public boolean startHi(String str) {
  if(str.length() < 2) return false;
  return (str.substring(0,2).equals("hi")) ? true : false;
}


Warmup-1 icyHot 
ans: 
public boolean icyHot(int temp1, int temp2) {
  return ((temp1 < 0 && temp2 > 100) || (temp2 < 0 && temp1 > 100)) ? true : false;
}


Warmup-1 in1020 
ans: 
public boolean in1020(int a, int b) {
  return ((a >= 10 && a <= 20) || (b >= 10 && b <= 20)) ? true : false;
}




Warmup-1 hasTeen 
ans: 
public boolean hasTeen(int a, int b, int c) {
   return ((a >= 13 && a <= 19) || (b >= 13 && b <= 19) || (c >= 13 && c <= 19)) ? true : false;
}


Warmup-1 loneTeen 
ans: 
public boolean loneTeen(int a, int b) {
  return ((a >= 13 && a <= 19) ^ (b >= 13 && b <= 19)) ? true : false;
}



Warmup-1 mixStart 
ans: 
public boolean mixStart(String str) {
  return (str.length() >= 3 && str.substring(1,3).equals("ix")) ? true : false;
}

Warmup-1 delDel 
ans: 
public String delDel(String str) {
  if(str.length() < 4) return str;
  if(str.substring(1,4).equals("del")) {return str.substring(0,1) + 
  str.substring(4, str.length());}
  return str;
}



Warmup-1 startOz
ans: 
public String startOz(String str) {
  int l = str.length();
  String res = "";
  if (l >= 1 && str.charAt(0) =='o') {
    res += str.charAt(0);
  }
  if (l >= 2 && str.charAt(1) =='z') {
    res += str.charAt(1);
  }
  return res;
}

Warmup-1 intMax
ans: 
public int intMax(int a, int b, int c) {
  int s1 = Math.max(a,b);
  return (s1 > c) ? s1 : c;
}

Warmup-1 close10
ans: 
public int close10(int a, int b) {
  int o1 = Math.abs(a-10), o2 = Math.abs(b-10);
  return (o1 < o2) ? a : (o1 > o2) ? b : 0;
 
}

Warmup-1 in3050
ans: 
public boolean in3050(int a, int b) {
  return ((a >= 30 && a <= 40) && (b >= 30 && b <= 40)) ? true : 
  ((a >= 40 && a <= 50) && (b >= 40 && b <= 50)) ? true : false;
}

Warmup-1 max1020
ans: 
public int max1020(int a, int b) {
  return (a >= 10 && a <= 20) && (b >= 10 && b <= 20) ? Math.max(a,b) :
 (a >= 10 && a <= 20) ? a : (b >= 10 && b <= 20) ? b : 0;
}


Warmup-1 stringE
ans: 

public boolean stringE(String str) {
  int c = 0, i = 0;
  while(i < str.length()) {if(str.charAt(i) == 'e') {c++; } i++;}
  return (c >= 1 && c <= 3) ? true : false;
}


Warmup-1 lastDigit
ans: 
public boolean lastDigit(int a, int b) {
  return ((a % 10) == (b % 10)) ? true : false;
}

Warmup-1 endUp
ans: 
public String endUp(String str) {
  int l = str.length();
  if(l <= 3) {
    return str.toUpperCase();
  } 
  return str.substring(0, l-3) + str.substring(l-3, l-2).toUpperCase() 
  + str.substring(l-2, l-1).toUpperCase() + str.substring(l-1, l).toUpperCase();
}



Warmup-1 everyNth
ans: 
public String everyNth(String str, int n) {
   String res = "";
   int i = 0;
   while(i < str.length()) {res += str.charAt(i); i += n;}
   return res;
}
